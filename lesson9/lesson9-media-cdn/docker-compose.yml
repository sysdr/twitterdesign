services:
  # LocalStack for AWS services simulation
  localstack:
    image: localstack/localstack:3.6.0
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=s3,cloudfront
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "./docker/volumes/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  # MongoDB for metadata storage
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=twitter_media
    volumes:
      - "./docker/volumes/mongodb:/data/db"

  # Redis for caching and job queues
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - "./docker/volumes/redis:/data"

  # Media Service Backend
  media-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/twitter_media
      - REDIS_URL=redis://redis:6379
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_S3_BUCKET=twitter-media-cdn
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
    volumes:
      - "./backend:/app"
      - "/app/node_modules"
    depends_on:
      - mongodb
      - redis
      - localstack

  # Frontend React App
  media-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - "./frontend:/app"
      - "/app/node_modules"
    depends_on:
      - media-backend

  # CDN Simulator (Nginx)
  cdn-simulator:
    image: nginx:1.25-alpine
    ports:
      - "8080:80"
    volumes:
      - "./docker/nginx.conf:/etc/nginx/nginx.conf"
      - "./docker/volumes/cdn:/usr/share/nginx/html"
    depends_on:
      - media-backend
